services:

  db:
    image: postgres:13
    volumes:
      - ./postgres_data:/var/lib/postgresql/data  # Change to a bind mount
    environment:
      POSTGRES_USER: postgres  # Change to postgres or another user
      POSTGRES_PASSWORD: building_apps
      POSTGRES_DB: building_project  # Keep the database name here
    networks:
      - your_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8080:80"
    depends_on:
      - db
    networks:
      - your_network
  web:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
    networks:
      - your_network
networks:
  your_network:
    driver: bridge

#volumes:
#  postgres_data:
